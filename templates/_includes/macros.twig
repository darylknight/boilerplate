{# This macro requires an asset and a transform #}
{% macro image(asset, transform, class) %}
	{% if asset %}
		<img src="{{ asset.url(transform) }}"
			class="{{ class ? class }}"
			width="{{ transform ? transform.width|default('auto') }}"
			height="{{ transform ? transform.height|default('auto') }}"
			loading="lazy"
			style="object-position: {{
			asset.focalPoint.x * 100 ~ '% ' ~ asset.focalPoint.y * 100
				~ '%;'
			}}"
			alt="{{ asset.alt }}" />
	{% endif %}
{% endmacro %}

{# This macro requires a URL and some button text #}
{% macro button(url, text, class, target) %}
	{% if url %}
		<a href="{{ url }}" {{ target ? 'target="_blank"' }} class="{{ class }}">
			{{ text }}
		</a>
	{% endif %}
{% endmacro %}

{# Tailwind theme for Formie forms - Light Background #}
{% macro form(formObject) %}
	{{
		craft.formie.renderForm(
			formObject,
			{
				themeConfig: {
					resetClasses: true,
					formTitle: {
						attributes: {
							class: 'text-lg leading-6 font-medium text-gray-900'
						}
					},
					alertError: {
						attributes: {
							class: 'rounded-md bg-red/10 border border-red text-sm text-red p-4 mb-4'
						}
					},
					alertSuccess: {
						attributes: {
							class: 'rounded-md bg-green/10 border border-green text-sm text-green p-4 mb-4'
						}
					},
					buttonWrapper: {
						attributes: {
							class: [
								'flex justify-start -mx-2',
								"{{ buttonsPosition == 'right' ? 'justify-end' }}",
								"{{ buttonsPosition == 'center' ? 'justify-center' }}",
								"{{ buttonsPosition == 'left-right' ? 'justify-between' }}",
								"{{ buttonsPosition == 'right-save-left' ? 'justify-start flex-row-reverse' }}",
								"{{ buttonsPosition == 'center-save-left' ? 'justify-center flex-row-reverse' }}",
								"{{ buttonsPosition == 'center-save-right' ? 'justify-center' }}",
								"{{ buttonsPosition == 'save-right' ? 'justify-between' }}",
								"{{ buttonsPosition == 'save-left' ? 'justify-between flex-row-reverse' }}"
							]
						}
					},
					buttonContainer: {
						attributes: {
							class: 'flex justify-start'
						}
					},
					saveButton: {
						attributes: {
							class: ['btn', 'mx-2']
						}
					},
					backButton: {
						attributes: {
							class: ['btn', 'mx-2']
						}
					},
					submitButton: {
						attributes: {
							class: ['btn', 'mx-2 order-10']
						}
					},
					page: {
						attributes: {
							class: [
								"{{ form.hasMultiplePages() and page.id != currentPage.id ? 'hidden' : false }}"
							]
						}
					},
					pageTabs: {
						attributes: {
							class: 'border-b border-gray-200 -mb-px flex space-x-8 mb-6'
						}
					},
					pageTab: {
						attributes: {
							class: 'py-4 px-1'
						}
					},
					pageTabLink: {
						attributes: {
							class: [
								'whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm',
								"{{ (page.id == currentPage.id) ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' }}",
								"{{ page.getFieldErrors(submission) ? 'text-red' : false }}"
							]
						}
					},
					pageTitle: {
						attributes: {
							class: 'text-lg leading-6 font-medium text-gray-900 mb-4'
						}
					},
					progress: {
						attributes: {
							class: 'flex h-[1.2rem] text-sm text-white bg-slate-200 mt-4'
						}
					},
					progressContainer: {
						attributes: {
							class: 'flex flex-col justify-center text-center font-medium bg-indigo-600'
						}
					},
					subFieldRow: {
						attributes: {
							class: 'flex flex-wrap -mx-4 mb-4 last:mb-0'
						}
					},
					nestedFieldRows: {
						attributes: {
							class: 'border py-4'
						}
					},
					nestedFieldRow: {
						attributes: {
							class: 'flex flex-wrap mb-4 last:mb-0'
						}
					},
					row: {
						attributes: {
							class: [
								'grid mb-4 gap-4 grid-cols-1',
								"{{ row.getFields(false, false) | length == 2 ? 'md:grid-cols-2' }}",
								"{{ row.getFields(false, false) | length == 3 ? 'md:grid-cols-2 lg:grid-cols-3' }}",
								"{{ row.getFields(false, false) | length == 4 ? 'md:grid-cols-2 xl:grid-cols-4' }}",
								"{{ row.getIsHidden() ? 'hidden' }}"
							]
						}
					},
					field: {
						attributes: {
							class: 'flex-1'
						}
					},
					fieldLabel: {
						attributes: {
							class: 'mb-1 block text-sm font-medium text-gray-700'
						}
					},
					fieldRequired: {
						attributes: {
							class: 'text-red'
						}
					},
					fieldInstructions: {
						attributes: {
							class: 'mb-1 field-instructions text-gray-500'
						}
					},
					fieldInput: {
						attributes: {
							class: [
								'shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md',
								"{{ (submission.getErrors(field.handle) ?? null) ? 'border-red' }}"
							]
						}
					},
					fieldError: {
						attributes: {
							class: 'text-red text-sm mt-1'
						}
					},
					fieldAddButton: {
						attributes: {
							class: 'btn'
						}
					},
					fieldRemoveButton: {
						attributes: {
							class: 'btn'
						}
					},
					fieldLimit: {
						attributes: {
							class: 'mt-2 text-sm text-gray-500'
						}
					},
					agree: {
						fieldOption: {
							attributes: {
								class: 'flex items-start mb-2'
							}
						},
						fieldOptionLabel: {
							attributes: {
								class: 'ml-2 text-sm leading-4'
							}
						},
						fieldInput: {
							resetClass: true,
							attributes: {
								class: 'focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded'
							}
						}
					},
					checkboxes: {
						fieldOption: {
							attributes: {
								class: 'flex items-start mb-2'
							}
						},
						fieldOptionLabel: {
							attributes: {
								class: 'ml-2 text-sm leading-4'
							}
						},
						fieldInput: {
							resetClass: true,
							attributes: {
								class: 'focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded'
							}
						}
					},
					dropdown: {
						fieldInput: {
							resetClass: true,
							attributes: {
								class: 'shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md'
							}
						}
					},
					hiddenField: {
						field: {
							resetClass: true,
							attributes: {
								class: 'hidden'
							}
						}
					},
					radioButtons: {
						fieldOption: {
							attributes: {
								class: 'flex items-start mb-2'
							}
						},
						fieldOptionLabel: {
							attributes: {
								class: 'ml-2 text-sm leading-4'
							}
						},
						fieldInput: {
							resetClass: true,
							attributes: {
								class: 'focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300'
							}
						}
					},
					recipients: {
						field: {
							attributes: {
								class: ["{{ field.getIsHidden() ? 'hidden' : false }}"]
							}
						}
					},
					repeater: {
						nestedField: {
							attributes: {
								class: 'relative'
							}
						},
						nestedFieldWrapper: {
							attributes: {
								class: 'mb-4'
							}
						},
						fieldRemoveButton: {
							attributes: {
								class: 'btn'
							}
						}
					},
					signature: {
						fieldInputContainer: {
							attributes: {
								class: 'relative'
							}
						},
						fieldCanvas: {
							attributes: {
								class: 'w-full h-[8rem] border bg-slate-100'
							}
						},
						fieldRemoveButton: {
							attributes: {
								class: 'btn'
							}
						}
					},
					table: {
						fieldTable: {
							attributes: {
								class: 'min-w-full divide-y divide-gray-300'
							}
						},
						fieldTableHeaderColumn: {
							attributes: {
								class: 'px-3 py-3.5 text-left text-sm font-semibold text-gray-900'
							}
						},
						fieldTableBody: {
							attributes: {
								class: 'divide-y divide-gray-200 bg-white'
							}
						},
						fieldTableBodyColumn: {
							attributes: {
								class: 'whitespace-nowrap px-3 py-4 text-sm text-gray-500'
							}
						}
					}
				}
			}
		)
	}}
{% endmacro %}
